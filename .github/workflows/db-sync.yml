name: 🚀 Enhanced Database Schema Sync

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod
      force_update:
        description: 'Force update entities (overwrite existing)'
        required: false
        default: false
        type: boolean
      skip_entities:
        description: 'Skip entity generation'
        required: false
        default: false
        type: boolean
      skip_repositories:
        description: 'Skip repository generation'
        required: false
        default: false
        type: boolean
      skip_procedures:
        description: 'Skip procedure extraction'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Dry run (analyze only, no file generation)'
        required: false
        default: false
        type: boolean

  push:
    branches:
      - main
      - develop
    paths:
      - 'scripts/db-analyzer/**'
      - '.github/workflows/db-sync.yml'
      - 'libs/database/**'

  schedule:
    # 매일 새벽 3시에 자동 스키마 동기화 (dev 환경)
    - cron: '0 3 * * *'

env:
  NODE_VERSION: '18'
  MYSQL_VERSION: '8.0'

jobs:
  enhanced-sync:
    name: 🚀 Enhanced Database Sync
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment:
          - ${{ github.event.inputs.environment || 'dev' }}

    outputs:
      sync-success: ${{ steps.sync.outputs.success }}
      entities-count: ${{ steps.sync.outputs.entities-count }}
      repositories-count: ${{ steps.sync.outputs.repositories-count }}
      procedures-count: ${{ steps.sync.outputs.procedures-count }}
      rollback-performed: ${{ steps.sync.outputs.rollback-performed }}

    steps:
      - name: 🛎️ Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: |
          npm install -g ts-node typescript
          npm install mysql2 class-transformer class-validator
          npm install

      - name: 🔧 Setup Database Connection
        id: db-config
        run: |
          case "${{ matrix.environment }}" in
            "dev")
              echo "DB_HOST=${{ secrets.DEV_DB_HOST }}" >> $GITHUB_ENV
              echo "DB_PORT=${{ secrets.DEV_DB_PORT }}" >> $GITHUB_ENV
              echo "DB_USER=${{ secrets.DEV_DB_USER }}" >> $GITHUB_ENV
              echo "DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}" >> $GITHUB_ENV
              echo "DB_NAME=${{ secrets.DEV_DB_NAME }}" >> $GITHUB_ENV
              ;;
            "qa")
              echo "DB_HOST=${{ secrets.QA_DB_HOST }}" >> $GITHUB_ENV
              echo "DB_PORT=${{ secrets.QA_DB_PORT }}" >> $GITHUB_ENV
              echo "DB_USER=${{ secrets.QA_DB_USER }}" >> $GITHUB_ENV
              echo "DB_PASSWORD=${{ secrets.QA_DB_PASSWORD }}" >> $GITHUB_ENV
              echo "DB_NAME=${{ secrets.QA_DB_NAME }}" >> $GITHUB_ENV
              ;;
            "prod")
              echo "DB_HOST=${{ secrets.PROD_DB_HOST }}" >> $GITHUB_ENV
              echo "DB_PORT=${{ secrets.PROD_DB_PORT }}" >> $GITHUB_ENV
              echo "DB_USER=${{ secrets.PROD_DB_USER }}" >> $GITHUB_ENV
              echo "DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}" >> $GITHUB_ENV
              echo "DB_NAME=${{ secrets.PROD_DB_NAME }}" >> $GITHUB_ENV
              ;;
          esac

      - name: 🚀 Execute Enhanced Database Sync
        id: sync
        run: |
          echo "🚀 Starting Enhanced Database Sync for ${{ matrix.environment }}..."

          # CLI 옵션 구성
          SYNC_OPTIONS=""

          if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
            SYNC_OPTIONS="$SYNC_OPTIONS --overwrite"
          fi

          if [ "${{ github.event.inputs.skip_entities }}" = "true" ]; then
            SYNC_OPTIONS="$SYNC_OPTIONS --skip-entities"
          fi

          if [ "${{ github.event.inputs.skip_repositories }}" = "true" ]; then
            SYNC_OPTIONS="$SYNC_OPTIONS --skip-repositories"
          fi

          if [ "${{ github.event.inputs.skip_procedures }}" = "true" ]; then
            SYNC_OPTIONS="$SYNC_OPTIONS --skip-procedures"
          fi

          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            SYNC_OPTIONS="$SYNC_OPTIONS --dry-run"
          fi

          # Enhanced DB Sync 실행
          if ts-node scripts/db-analyzer/enhanced-db-sync.ts "${{ matrix.environment }}" "libs/database/src" $SYNC_OPTIONS; then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "✅ Enhanced Database Sync completed successfully!"
            
            # 결과 파일에서 통계 추출
            if [ -f "libs/database/src/sync-report.json" ]; then
              ENTITIES_COUNT=$(jq '.results.entitiesGenerated' libs/database/src/sync-report.json)
              REPOSITORIES_COUNT=$(jq '.results.repositoriesGenerated' libs/database/src/sync-report.json)
              PROCEDURES_COUNT=$(jq '.results.proceduresExtracted' libs/database/src/sync-report.json)
              ROLLBACK_PERFORMED=$(jq '.rollbackPerformed' libs/database/src/sync-report.json)
              
              echo "entities-count=$ENTITIES_COUNT" >> $GITHUB_OUTPUT
              echo "repositories-count=$REPOSITORIES_COUNT" >> $GITHUB_OUTPUT
              echo "procedures-count=$PROCEDURES_COUNT" >> $GITHUB_OUTPUT
              echo "rollback-performed=$ROLLBACK_PERFORMED" >> $GITHUB_OUTPUT
              
              # 요약 생성
              echo "## 🎉 Enhanced Database Sync Results" >> $GITHUB_STEP_SUMMARY
              echo "**Environment:** ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
              echo "**Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY
              echo "**Entities Generated:** $ENTITIES_COUNT" >> $GITHUB_STEP_SUMMARY
              echo "**Repositories Generated:** $REPOSITORIES_COUNT" >> $GITHUB_STEP_SUMMARY
              echo "**Procedures Extracted:** $PROCEDURES_COUNT" >> $GITHUB_STEP_SUMMARY
              echo "**Rollback Performed:** $ROLLBACK_PERFORMED" >> $GITHUB_STEP_SUMMARY
              echo "**Timestamp:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "success=false" >> $GITHUB_OUTPUT
            echo "rollback-performed=true" >> $GITHUB_OUTPUT
            echo "❌ Enhanced Database Sync failed!"
            
            echo "## ❌ Enhanced Database Sync Failed" >> $GITHUB_STEP_SUMMARY
            echo "**Environment:** ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
            echo "**Status:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
            echo "**Rollback:** Performed" >> $GITHUB_STEP_SUMMARY
            echo "**Timestamp:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY
            
            exit 1
          fi

      - name: 📤 Upload Generated Files
        if: steps.sync.outputs.success == 'true' && github.event.inputs.dry_run != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: generated-files-${{ matrix.environment }}
          path: |
            libs/database/src/entities/
            libs/database/src/repositories/
            libs/database/src/procedures/
            libs/database/src/sync-report.json
          retention-days: 30

      - name: 🧪 Validate Generated Code
        if: steps.sync.outputs.success == 'true' && github.event.inputs.dry_run != 'true'
        run: |
          echo "🧪 Validating generated code..."

          # TypeScript 컴파일 체크
          if npx tsc --noEmit --project libs/database/tsconfig.lib.json; then
            echo "✅ TypeScript compilation check passed"
          else
            echo "❌ TypeScript compilation errors detected"
            echo "## ⚠️ Code Validation Warning" >> $GITHUB_STEP_SUMMARY
            echo "Generated code has TypeScript compilation errors." >> $GITHUB_STEP_SUMMARY
          fi

          # Lint 체크 (에러 무시)
          npx eslint libs/database/src --ext .ts --fix || echo "⚠️ Linting completed with warnings"

      - name: 💾 Commit Generated Files
        if: steps.sync.outputs.success == 'true' && github.event.inputs.dry_run != 'true'
        run: |
          echo "💾 Committing generated files..."

          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"

          # 생성된 파일들 추가
          git add libs/database/src/entities/
          git add libs/database/src/repositories/
          git add libs/database/src/procedures/

          if git diff --staged --quiet; then
            echo "📝 No changes to commit"
          else
            # 커밋 메시지 생성
            COMMIT_MSG="🤖 Auto-generated database files from ${{ matrix.environment }} environment

            📊 Generation Summary:
            - Entities: ${{ steps.sync.outputs.entities-count }}
            - Repositories: ${{ steps.sync.outputs.repositories-count }}
            - Procedures: ${{ steps.sync.outputs.procedures-count }}
            
            🔧 Options:
            - Force Update: ${{ github.event.inputs.force_update }}
            - Skip Entities: ${{ github.event.inputs.skip_entities }}
            - Skip Repositories: ${{ github.event.inputs.skip_repositories }}
            - Skip Procedures: ${{ github.event.inputs.skip_procedures }}
            
            ⏰ Generated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
            🌍 Environment: ${{ matrix.environment }}
            
            [skip ci]"
            
            git commit -m "$COMMIT_MSG"
            git push
            echo "✅ Changes committed and pushed!"
          fi

  notify:
    name: 📢 Enhanced Notification
    runs-on: ubuntu-latest
    needs: [enhanced-sync]
    if: always()

    steps:
      - name: 📢 Send Slack Notification
        if: needs.enhanced-sync.outputs.sync-success == 'true' || failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.enhanced-sync.outputs.sync-success == 'true' && 'success' || 'failure' }}
          channel: '#database-updates'
          text: |
            🚀 Enhanced Database Sync: ${{ needs.enhanced-sync.outputs.sync-success == 'true' && '✅ Success' || '❌ Failed' }}

            **Environment:** ${{ github.event.inputs.environment || 'dev' }}
            **Entities Generated:** ${{ needs.enhanced-sync.outputs.entities-count || '0' }}
            **Repositories Generated:** ${{ needs.enhanced-sync.outputs.repositories-count || '0' }}
            **Procedures Extracted:** ${{ needs.enhanced-sync.outputs.procedures-count || '0' }}
            **Rollback Performed:** ${{ needs.enhanced-sync.outputs.rollback-performed || 'false' }}

            **Options:**
            - Force Update: ${{ github.event.inputs.force_update || 'false' }}
            - Skip Entities: ${{ github.event.inputs.skip_entities || 'false' }}
            - Skip Repositories: ${{ github.event.inputs.skip_repositories || 'false' }}
            - Skip Procedures: ${{ github.event.inputs.skip_procedures || 'false' }}
            - Dry Run: ${{ github.event.inputs.dry_run || 'false' }}

            **Repository:** ${{ github.repository }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Workflow:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: 📧 Send Email Summary
        if: needs.enhanced-sync.outputs.sync-success == 'true' || failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "${{ needs.enhanced-sync.outputs.sync-success == 'true' && '✅ Enhanced Database Sync Success' || '❌ Enhanced Database Sync Failed' }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: 'GitHub Actions <noreply@github.com>'
          html_body: |
            <!DOCTYPE html>
            <html>
            <head>
                <style>
                    body { font-family: Arial, sans-serif; margin: 20px; }
                    .header { background-color: ${{ needs.enhanced-sync.outputs.sync-success == 'true' && '#d4edda' || '#f8d7da' }}; padding: 15px; border-radius: 5px; }
                    .success { color: #155724; }
                    .failure { color: #721c24; }
                    .info-table { border-collapse: collapse; width: 100%; margin: 20px 0; }
                    .info-table th, .info-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }
                    .info-table th { background-color: #f2f2f2; }
                    .footer { margin-top: 30px; font-size: 12px; color: #666; }
                </style>
            </head>
            <body>
                <div class="header">
                    <h2 class="${{ needs.enhanced-sync.outputs.sync-success == 'true' && 'success' || 'failure' }}">
                        🚀 Enhanced Database Sync Report
                    </h2>
                    <p><strong>Status:</strong> ${{ needs.enhanced-sync.outputs.sync-success == 'true' && '✅ Success' || '❌ Failed' }}</p>
                    <p><strong>Environment:</strong> ${{ github.event.inputs.environment || 'dev' }}</p>
                    <p><strong>Timestamp:</strong> ${{ github.event.head_commit.timestamp }}</p>
                </div>

                <h3>📊 Generation Results</h3>
                <table class="info-table">
                    <tr><th>Component</th><th>Count</th></tr>
                    <tr><td>Entities Generated</td><td>${{ needs.enhanced-sync.outputs.entities-count || '0' }}</td></tr>
                    <tr><td>Repositories Generated</td><td>${{ needs.enhanced-sync.outputs.repositories-count || '0' }}</td></tr>
                    <tr><td>Procedures Extracted</td><td>${{ needs.enhanced-sync.outputs.procedures-count || '0' }}</td></tr>
                    <tr><td>Rollback Performed</td><td>${{ needs.enhanced-sync.outputs.rollback-performed || 'false' }}</td></tr>
                </table>

                <h3>🔧 Execution Options</h3>
                <table class="info-table">
                    <tr><th>Option</th><th>Value</th></tr>
                    <tr><td>Force Update</td><td>${{ github.event.inputs.force_update || 'false' }}</td></tr>
                    <tr><td>Skip Entities</td><td>${{ github.event.inputs.skip_entities || 'false' }}</td></tr>
                    <tr><td>Skip Repositories</td><td>${{ github.event.inputs.skip_repositories || 'false' }}</td></tr>
                    <tr><td>Skip Procedures</td><td>${{ github.event.inputs.skip_procedures || 'false' }}</td></tr>
                    <tr><td>Dry Run</td><td>${{ github.event.inputs.dry_run || 'false' }}</td></tr>
                </table>

                <h3>🔗 Links</h3>
                <ul>
                    <li><a href="${{ github.server_url }}/${{ github.repository }}">Repository</a></li>
                    <li><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Workflow Run</a></li>
                    <li><a href="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}">Commit</a></li>
                </ul>

                <div class="footer">
                    <p>This is an automated message from GitHub Actions Enhanced Database Sync workflow.</p>
                    <p>Repository: ${{ github.repository }} | Branch: ${{ github.ref_name }}</p>
                </div>
            </body>
            </html>

      - name: 🐛 Create Issue on Failure
        if: failure() && github.event.inputs.environment == 'prod'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 Enhanced Database Sync Failed - Production Environment`;
            const body = `
            ## 🚨 Critical: Enhanced Database Sync Failure

            **Environment:** Production
            **Timestamp:** ${{ github.event.head_commit.timestamp }}
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ### 📊 Failure Details
            - **Entities Generated:** ${{ needs.enhanced-sync.outputs.entities-count || '0' }}
            - **Repositories Generated:** ${{ needs.enhanced-sync.outputs.repositories-count || '0' }}
            - **Procedures Extracted:** ${{ needs.enhanced-sync.outputs.procedures-count || '0' }}
            - **Rollback Performed:** ${{ needs.enhanced-sync.outputs.rollback-performed || 'false' }}

            ### 🔧 Execution Options
            - **Force Update:** ${{ github.event.inputs.force_update || 'false' }}
            - **Skip Entities:** ${{ github.event.inputs.skip_entities || 'false' }}
            - **Skip Repositories:** ${{ github.event.inputs.skip_repositories || 'false' }}
            - **Skip Procedures:** ${{ github.event.inputs.skip_procedures || 'false' }}
            - **Dry Run:** ${{ github.event.inputs.dry_run || 'false' }}

            ### 🔍 Investigation Steps
            1. Check the workflow logs for detailed error messages
            2. Verify database connectivity and credentials
            3. Review recent schema changes
            4. Check for conflicting database operations

            ### 🚨 Immediate Actions Required
            - [ ] Investigate the root cause
            - [ ] Verify production database integrity
            - [ ] Consider manual schema sync if needed
            - [ ] Update team on resolution status

            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            `;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'critical', 'database', 'production']
            });
